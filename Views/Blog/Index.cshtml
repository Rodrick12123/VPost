@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> loginManager
@model Blog.Models.ViewModels.BlogDetails
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if(Model != null)
            {
                <h1 class="mb-3">@Model.Heading</h1>
                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secoundary">@Model.Author</span>
                    <span class="text-secoundary">@Model.PublishedDate</span>
                </div>

                <div class="mb-3">
                    @if (loginManager.IsSignedIn(User))
                    {
                        @if (Model.Liked)
                        {
                            <a class="btn btn-dark" style="cursor:pointer">
                                <i class="bi bi-heart-fill"></i>

                            </a>
                        }
                        else
                        {
                            <a id="like" class="btn btn-dark" style="cursor:pointer">
                                <i class="bi bi-heart"></i>

                            </a>
                        }
                        
                    }
                    <span id="likes">@Model.LikeTotal likes</span>
                </div>
                
                <div class="mb-3 d-flex">
                    @foreach (var tag in Model.Tags)
                    {
                        <span class="badge bg-secondary me-1">@tag.Name</span>
                    }
                </div>
                <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3"/>
                <div class="mb-3 blog-content">
                    @Html.Raw(Model.Content);
                </div>
                <div class="card">
                    <div class="card-header">
                        <h4>Comments</h4>
                        @if (loginManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label">Comment Here</label>
                                    <input type="text" class="form-control" asp-for="CommentDescription"/>
                                    <input type="hidden" asp-for="Id"/>
                                    <input type="hidden" asp-for="UrlHandle"/>
                                </div>
                                <div class=mb-3>
                                    <button type="submit" class="btn btn-dark">Submit</button>
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @if(Model.Comments != null && Model.Comments.Any())
                        {
                            @foreach(var comment in Model.Comments)
                            {
                                <div class="mb-3 card">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <span class="text-secoundary">@comment.UserName</span>
                                            <span class="text-secoundary">@comment.CommentDate</span>
                                        </div>
                                        <div>
                                            @comment.Description
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
                

            }
            else
            {
                <p>Blog not found!</p>
            }
        </div>
    </div>
</div>

@section Scripts{
    <script>
        const likeButtonElement = document.getElementById("like");
        const totalLikesElement = document.getELementById("likes");

        async function getLikeTotal(){
            fetch('/api/BlogLike/@Model.Id/GetTotalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type:' 'application/json',
                    'Accept': '*/*'
                }
            }).then(data => data.json())
            .then(result => totalLikesElement.innerHTML = result)
        }
        async function addBlogLike() {
            fetch('/api/BlogLike/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({ BlogPostId: '@Model.Id', UserId: '@userManager.GetUserId(User)' })
            })
                .then(() => {
                    likeButtonElement.innerHTML = ' <i class="bi bi-heart-fill"></i>';
                    likeButtonElement.removeEventListener('click', addBlogLike);
                    getLikeTotal();
                    )};
                
        }

        likeButtonELement.addEventListner('click', addBlogLike);
    </script>
}
